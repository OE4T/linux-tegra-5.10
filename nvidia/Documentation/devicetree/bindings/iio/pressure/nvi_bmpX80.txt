* Bosch BMP 180/280 pressure sensor

nvi_ (NVI = NVidia/Invensense) drivers use the NVidia Sensor (NVS) framework.
See the nvs.txt documentation for NVS DT capabilities.
The nvi_bmpX80 pressure sensor driver supports the BMP180 and BMP280 devices
as stand-alone or behind an Invensense MPU.
If the part is known and is populated, then it can be specified in the DT:
Example: bmp280@77.
By specifying a device this way, the driver will assume this specific device
is populated during system boot and will not verify its existence. If, however,
the device is unknown or may not be populated, then the label, ak89xx,
(e.g. bmpX80@77), must be used.  This tells the driver to find which device is
used.  If the device is not found, the driver will unload itself.  This also
requires that regulators be setup correctly for the probe function.

Required properties:
- compatible: Device or generic name.
	      Supported names:
	      - bmp,bmpX80
	      - bmp,bmp180
	      - bmp,bmp280
  Note: If the part is known and is populated, then it can be specified:
	Example: compatible = "bmp,bmp280";
	When specifying a device this way, the driver will assume this specific
	device is populated during system boot and will not verify its
	existence.  If, however, the device is unknown or may not be populated,
	then the label, bmpX80, (Example: compatible = "bmp,bmpX80";),
	must be used.  This tells the driver to find which device is used.  If
	the device is not found, the driver will unload itself.  This requires
	regulators to be setup correctly for the probe function.
- reg: i2c address of the device. It should be 0x76 or 0x77.

Optional properties:
- status: set to "ok" or "okay" for normal operation.  Set to anything else
	  to unload the driver without ever communicating with the device.
  Note: The "anything else" above is typically "disabled".
	Since the driver will unload without communicating with the device, the
	device will be left in its POR state.
- pressure_disable: Setting this property to <1> will disable the device and
		    unload the driver.
- vdd-supply: regulator supply for the chip
- vddio-supply: regulator supply for the chip
  Note: These are required if the driver is to control the regulators.
- nvi_config: This configures the device's I2C connection.
              The string options are: auto
	                              mpu
	                              host
	      auto = the driver will auto detect the connection.
	      mpu = the device is connected to an Invensense auxilary bus.
	      host = the device is connected to the host AP.
	      If this property is not defined, auto will be used.

Example:
	bmpX80@77 {
                compatible = "bmp,bmpX80";
                reg = <0x77>;
        };


