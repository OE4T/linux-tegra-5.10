From 20cc30ca45b7af5d9bcb1e814d1ac63d55d71840 Mon Sep 17 00:00:00 2001
From: Yajun Deng <yajun.deng@linux.dev>
Date: Wed, 3 Aug 2022 14:24:30 +0800
Subject: [PATCH 314/322] locking/rtmutex: switch to EXPORT_SYMBOL() for
 ww_mutex_lock{,_interruptible}()
X-NVConfidentiality: public

We can use EXPORT_SYMBOL() instead of EXPORT_SYMBOL_GPL() in
ww_mutex_lock_interruptible() and ww_mutex_lock(). That match
ww_mutex_unlock() well. And also good for 3rd kernel modules.

Link: https://lore.kernel.org/r/20220803062430.1307312-1-yajun.deng@linux.dev
Signed-off-by: Yajun Deng <yajun.deng@linux.dev>
Signed-off-by: Luis Claudio R. Goncalves <lgoncalv@redhat.com>
---
 kernel/locking/rtmutex.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/kernel/locking/rtmutex.c b/kernel/locking/rtmutex.c
index 31b374d36d04..b110fc57f733 100644
--- a/kernel/locking/rtmutex.c
+++ b/kernel/locking/rtmutex.c
@@ -2513,7 +2513,7 @@ ww_mutex_lock_interruptible(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(ww_mutex_lock_interruptible);
+EXPORT_SYMBOL(ww_mutex_lock_interruptible);
 
 int __sched
 ww_mutex_lock(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)
@@ -2533,7 +2533,7 @@ ww_mutex_lock(struct ww_mutex *lock, struct ww_acquire_ctx *ctx)
 
 	return ret;
 }
-EXPORT_SYMBOL_GPL(ww_mutex_lock);
+EXPORT_SYMBOL(ww_mutex_lock);
 
 void __sched ww_mutex_unlock(struct ww_mutex *lock)
 {
-- 
2.17.1

